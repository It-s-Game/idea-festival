//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Resources/CharacterControll.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CharacterControll: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CharacterControll()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CharacterControll"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""f4222443-0871-4b2d-84c3-b8684297ae9e"",
            ""actions"": [
                {
                    ""name"": ""LeftStick"",
                    ""type"": ""Value"",
                    ""id"": ""73821fe4-6120-4794-ae89-44b04853f6db"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightStick"",
                    ""type"": ""Value"",
                    ""id"": ""40fac30d-ba88-47ae-b14e-64e69939bba6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""0436587f-e9c0-4598-b5d0-b912f638c1d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonY"",
                    ""type"": ""Button"",
                    ""id"": ""90a2fd6a-a589-46c8-825a-2233daf124cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""5b14db6a-a6a4-44be-aef1-627ee830dcd2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonX"",
                    ""type"": ""Button"",
                    ""id"": ""a3524bee-bfe9-42ff-8694-d44e97c018db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftBumper"",
                    ""type"": ""Button"",
                    ""id"": ""7cb41023-32cf-4a8e-b8c6-fb027300ab00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBumper"",
                    ""type"": ""Button"",
                    ""id"": ""f7b183c8-4432-41db-8998-5be8aeecf509"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""6208b592-fa97-4e58-874d-2b1adaca35ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""5b2d9e0d-0edb-4bb3-875e-29d5105466fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftStickPress"",
                    ""type"": ""Button"",
                    ""id"": ""ed1269a2-3e12-4055-8031-5168c511f1ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStickPress"",
                    ""type"": ""Button"",
                    ""id"": ""1dc52623-851f-4f0c-94cb-11fff24e5f6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9902e46a-f6d5-4d4e-bcde-727494407303"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13cc7c89-0cdc-40ea-8877-6b56028f91c5"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5264142e-c67c-4fea-a8be-d033e18dc16c"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c6d976b-ca7d-4ac0-81ab-8ae6a9ff7152"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d2695b5-1b8a-401c-b2f5-a1aebed41218"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ecf5930-340e-4c5c-8a9c-0252576013a2"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9743e47d-ddbe-4b16-930a-4b4371798a51"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17db5688-4ad5-4bb7-b5ad-5ebfb78bb403"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""072b7c80-45ff-4abc-95c3-441fa524720d"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f0d9ee9-70d6-4cab-a7cc-bce0a0e54e39"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7b250b5-8730-469c-ab6e-304af347a6e5"",
                    ""path"": ""<XInputController>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""217a96a8-66fd-4bd5-b303-ff2140bef7b2"",
                    ""path"": ""<XInputController>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_LeftStick = m_Character.FindAction("LeftStick", throwIfNotFound: true);
        m_Character_RightStick = m_Character.FindAction("RightStick", throwIfNotFound: true);
        m_Character_ButtonB = m_Character.FindAction("ButtonB", throwIfNotFound: true);
        m_Character_ButtonY = m_Character.FindAction("ButtonY", throwIfNotFound: true);
        m_Character_ButtonA = m_Character.FindAction("ButtonA", throwIfNotFound: true);
        m_Character_ButtonX = m_Character.FindAction("ButtonX", throwIfNotFound: true);
        m_Character_LeftBumper = m_Character.FindAction("LeftBumper", throwIfNotFound: true);
        m_Character_RightBumper = m_Character.FindAction("RightBumper", throwIfNotFound: true);
        m_Character_LeftTrigger = m_Character.FindAction("LeftTrigger", throwIfNotFound: true);
        m_Character_RightTrigger = m_Character.FindAction("RightTrigger", throwIfNotFound: true);
        m_Character_LeftStickPress = m_Character.FindAction("LeftStickPress", throwIfNotFound: true);
        m_Character_RightStickPress = m_Character.FindAction("RightStickPress", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private List<ICharacterActions> m_CharacterActionsCallbackInterfaces = new List<ICharacterActions>();
    private readonly InputAction m_Character_LeftStick;
    private readonly InputAction m_Character_RightStick;
    private readonly InputAction m_Character_ButtonB;
    private readonly InputAction m_Character_ButtonY;
    private readonly InputAction m_Character_ButtonA;
    private readonly InputAction m_Character_ButtonX;
    private readonly InputAction m_Character_LeftBumper;
    private readonly InputAction m_Character_RightBumper;
    private readonly InputAction m_Character_LeftTrigger;
    private readonly InputAction m_Character_RightTrigger;
    private readonly InputAction m_Character_LeftStickPress;
    private readonly InputAction m_Character_RightStickPress;
    public struct CharacterActions
    {
        private @CharacterControll m_Wrapper;
        public CharacterActions(@CharacterControll wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftStick => m_Wrapper.m_Character_LeftStick;
        public InputAction @RightStick => m_Wrapper.m_Character_RightStick;
        public InputAction @ButtonB => m_Wrapper.m_Character_ButtonB;
        public InputAction @ButtonY => m_Wrapper.m_Character_ButtonY;
        public InputAction @ButtonA => m_Wrapper.m_Character_ButtonA;
        public InputAction @ButtonX => m_Wrapper.m_Character_ButtonX;
        public InputAction @LeftBumper => m_Wrapper.m_Character_LeftBumper;
        public InputAction @RightBumper => m_Wrapper.m_Character_RightBumper;
        public InputAction @LeftTrigger => m_Wrapper.m_Character_LeftTrigger;
        public InputAction @RightTrigger => m_Wrapper.m_Character_RightTrigger;
        public InputAction @LeftStickPress => m_Wrapper.m_Character_LeftStickPress;
        public InputAction @RightStickPress => m_Wrapper.m_Character_RightStickPress;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Add(instance);
            @LeftStick.started += instance.OnLeftStick;
            @LeftStick.performed += instance.OnLeftStick;
            @LeftStick.canceled += instance.OnLeftStick;
            @RightStick.started += instance.OnRightStick;
            @RightStick.performed += instance.OnRightStick;
            @RightStick.canceled += instance.OnRightStick;
            @ButtonB.started += instance.OnButtonB;
            @ButtonB.performed += instance.OnButtonB;
            @ButtonB.canceled += instance.OnButtonB;
            @ButtonY.started += instance.OnButtonY;
            @ButtonY.performed += instance.OnButtonY;
            @ButtonY.canceled += instance.OnButtonY;
            @ButtonA.started += instance.OnButtonA;
            @ButtonA.performed += instance.OnButtonA;
            @ButtonA.canceled += instance.OnButtonA;
            @ButtonX.started += instance.OnButtonX;
            @ButtonX.performed += instance.OnButtonX;
            @ButtonX.canceled += instance.OnButtonX;
            @LeftBumper.started += instance.OnLeftBumper;
            @LeftBumper.performed += instance.OnLeftBumper;
            @LeftBumper.canceled += instance.OnLeftBumper;
            @RightBumper.started += instance.OnRightBumper;
            @RightBumper.performed += instance.OnRightBumper;
            @RightBumper.canceled += instance.OnRightBumper;
            @LeftTrigger.started += instance.OnLeftTrigger;
            @LeftTrigger.performed += instance.OnLeftTrigger;
            @LeftTrigger.canceled += instance.OnLeftTrigger;
            @RightTrigger.started += instance.OnRightTrigger;
            @RightTrigger.performed += instance.OnRightTrigger;
            @RightTrigger.canceled += instance.OnRightTrigger;
            @LeftStickPress.started += instance.OnLeftStickPress;
            @LeftStickPress.performed += instance.OnLeftStickPress;
            @LeftStickPress.canceled += instance.OnLeftStickPress;
            @RightStickPress.started += instance.OnRightStickPress;
            @RightStickPress.performed += instance.OnRightStickPress;
            @RightStickPress.canceled += instance.OnRightStickPress;
        }

        private void UnregisterCallbacks(ICharacterActions instance)
        {
            @LeftStick.started -= instance.OnLeftStick;
            @LeftStick.performed -= instance.OnLeftStick;
            @LeftStick.canceled -= instance.OnLeftStick;
            @RightStick.started -= instance.OnRightStick;
            @RightStick.performed -= instance.OnRightStick;
            @RightStick.canceled -= instance.OnRightStick;
            @ButtonB.started -= instance.OnButtonB;
            @ButtonB.performed -= instance.OnButtonB;
            @ButtonB.canceled -= instance.OnButtonB;
            @ButtonY.started -= instance.OnButtonY;
            @ButtonY.performed -= instance.OnButtonY;
            @ButtonY.canceled -= instance.OnButtonY;
            @ButtonA.started -= instance.OnButtonA;
            @ButtonA.performed -= instance.OnButtonA;
            @ButtonA.canceled -= instance.OnButtonA;
            @ButtonX.started -= instance.OnButtonX;
            @ButtonX.performed -= instance.OnButtonX;
            @ButtonX.canceled -= instance.OnButtonX;
            @LeftBumper.started -= instance.OnLeftBumper;
            @LeftBumper.performed -= instance.OnLeftBumper;
            @LeftBumper.canceled -= instance.OnLeftBumper;
            @RightBumper.started -= instance.OnRightBumper;
            @RightBumper.performed -= instance.OnRightBumper;
            @RightBumper.canceled -= instance.OnRightBumper;
            @LeftTrigger.started -= instance.OnLeftTrigger;
            @LeftTrigger.performed -= instance.OnLeftTrigger;
            @LeftTrigger.canceled -= instance.OnLeftTrigger;
            @RightTrigger.started -= instance.OnRightTrigger;
            @RightTrigger.performed -= instance.OnRightTrigger;
            @RightTrigger.canceled -= instance.OnRightTrigger;
            @LeftStickPress.started -= instance.OnLeftStickPress;
            @LeftStickPress.performed -= instance.OnLeftStickPress;
            @LeftStickPress.canceled -= instance.OnLeftStickPress;
            @RightStickPress.started -= instance.OnRightStickPress;
            @RightStickPress.performed -= instance.OnRightStickPress;
            @RightStickPress.canceled -= instance.OnRightStickPress;
        }

        public void RemoveCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterActions @Character => new CharacterActions(this);
    public interface ICharacterActions
    {
        void OnLeftStick(InputAction.CallbackContext context);
        void OnRightStick(InputAction.CallbackContext context);
        void OnButtonB(InputAction.CallbackContext context);
        void OnButtonY(InputAction.CallbackContext context);
        void OnButtonA(InputAction.CallbackContext context);
        void OnButtonX(InputAction.CallbackContext context);
        void OnLeftBumper(InputAction.CallbackContext context);
        void OnRightBumper(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
        void OnLeftStickPress(InputAction.CallbackContext context);
        void OnRightStickPress(InputAction.CallbackContext context);
    }
}
